//https://leetcode.com/problems/minimum-depth-of-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


void func(struct TreeNode* root, int cur, int* min)
{
    if(cur > *min)
        return;
        
    if(root->left == NULL && root->right == NULL)
    {
        if(cur < *min)
            *min = cur;
        return;
    }
    
    if(root->left)
        func(root->left, cur+1, min);
    if(root->right)
        func(root->right, cur+1, min);
    return;
}
    

int minDepth(struct TreeNode* root)
{
    if(root == NULL)
        return 0;
    int min = INT_MAX;
    
    func(root, 1, &min);
    
    return min;
}


=============================================================================================================================

int minDepth(struct TreeNode* root)
{
    if(root == NULL)
        return 0;
    
    if(root->left == NULL && root->right == NULL)
        return 1;
    
    int l = INT_MAX;
    int r = INT_MAX;
    
    if(root->left)
        l = minDepth(root->left) + 1;
    if(root->right)
        r = minDepth(root->right) + 1;
    
    if(l > r)
        return r;
    else 
        return l;

}


