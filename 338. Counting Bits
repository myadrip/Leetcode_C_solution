//https://leetcode.com/problems/counting-bits/

/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int count(int n)
{
    int ret = 0;
    while(n>0)
    {
        if(n%2 == 1)
        {
            ret++;
        }
        n = n>>1;
    }
    return ret;
    
}
int* countBits(int num, int* returnSize)
{
    int* ret = (int*)malloc(sizeof(int)*(num+1));
    (*returnSize) = num+1;
    
    for(int i = 0; i < num+1; i++)
    {
        ret[i] = count(i);
    }
    
    return ret;
}

=======================================================================================================================


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* countBits(int num, int* returnSize)
{
    (*returnSize) = num+1;
    
    int* ret = (int*)malloc(sizeof(int)*(*returnSize));
    
    for(int i = 0; i < (*returnSize); i++)
    {
        if(i == 0)
            ret[i] = 0;
        else if(i == 1)
            ret[i] = 1;
        else
        {
            if(i%2 == 1)
            {
                ret[i] = ret[i/2]+1;
            }
            else
            {
                ret[i] = ret[i/2];
            }
        }
    }
    
    return ret;

}
