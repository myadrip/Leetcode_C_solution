//https://leetcode.com/problems/cousins-in-binary-tree/

typedef struct info
{
    int     depth;
    int     parent;
    bool    found;
}INFO;


void search(struct TreeNode* root, int x, int y, INFO* x_info, INFO* y_info, int depth )
{
    if(root == NULL)
        return;
    if(x_info->found && y_info->found)
        return;
    
    if(root->left)
    {
        if(root->left->val == x)
        {
            x_info->depth = depth+1;
            x_info->parent = root->val;
            x_info->found = true;
        }
        if(root->left->val == y)
        {
            y_info->depth = depth+1;
            y_info->parent = root->val;
            y_info->found = true;
        }
        search(root->left, x, y, x_info, y_info, depth+1);
    }
    
    if(root->right)
    {
        if(root->right->val == x)
        {
            x_info->depth = depth+1;
            x_info->parent = root->val;
            x_info->found = true;
        }
        if(root->right->val == y)
        {
            y_info->depth = depth+1;
            y_info->parent = root->val;
            y_info->found = true;
        }
        
        search(root->right, x, y, x_info, y_info, depth+1);
    }
    
}
bool isCousins(struct TreeNode* root, int x, int y)
{
    INFO x_info = {0,0,false};
    INFO y_info = {0,0,false};
    
    search(root, x, y, &x_info, &y_info, 0);
    
    if(x_info.depth == y_info.depth && x_info.parent != y_info.parent)
        return true;
    else
        return false;

}
