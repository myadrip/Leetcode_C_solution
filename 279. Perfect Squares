//https://leetcode.com/problems/perfect-squares/

/* Time Limit Exceeded */
bool isSquare(int n)
{
    if(n == 1)
        return true;
    for(int i = 2; i <= n/2; i++)
    {
        if(i*i == n)
            return true;
    }
    return false;
}
int f_min(int a, int b)
{
    if(a > b)
        return b;
    else
        return a;
    
}

int numSquares(int n)
{
    int* dp = (int*)malloc(sizeof(int)*(n+1));
    
    
    dp[0] = 0;
    for(int i = 1; i < n+1; i++)
    {
        if(isSquare(i))
            dp[i] = 1;
        else
        {
            dp[i] = INT_MAX;
            for(int j = 1; j <= i/2; j++ )
            {   
                dp[i] = f_min(dp[i], dp[i-j] + dp[j]);
                    
            }
        }
    }
    /*
    for(int i = 1; i < n+1; i++)
        printf("dp[%d]: %d\n", i, dp[i]);
    */
    int ret = dp[n];
    free(dp);
    
    return ret;
}

============================================================================================================================================
