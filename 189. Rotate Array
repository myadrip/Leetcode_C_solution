//https://leetcode.com/problems/rotate-array/



void rotate(int* nums, int numsSize, int k)
{
    int* buf = (int*)malloc(sizeof(int)*numsSize);
    for(int i = 0; i < numsSize; i++)
    {
        buf[i] = nums[(i-k%numsSize+numsSize)%numsSize];
    }
    
    memcpy(nums, buf, sizeof(int)*numsSize);
    free(buf);
    return;

}


=============================================================================================================================
void rotate(int* nums, int numsSize, int k)
{
    k = k % numsSize;
    int count = 0;
    
    for(int start = 0; count < numsSize; start++)
    {
        int current = start;
        int cur_val = nums[start];
        int next_val = 0;
        
        while(1)
        {
            int next = (current+k)%numsSize;
            
            next_val = nums[next];
            nums[next] = cur_val;
            
            cur_val = next_val;
            current = next;
            count++;
            
            if(next == start)
                break;
            if(count == numsSize)
                return;
            
        }
    }
    
    return;
}
=============================================================================================================================



void rotate(int* nums, int numsSize, int k)
{
    k = k%numsSize;
    
    for(int i = 0; i < k; i++)
    {
        int cur_val = nums[0];
        int next_val;
        
        for(int j = 0; j < numsSize; j++)
        {
            int next = (j+1)%numsSize;
            next_val = nums[next];
            nums[next] = cur_val;
            cur_val = next_val;
        }
    }
    return;

}
