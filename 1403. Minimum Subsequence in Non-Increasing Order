// https://leetcode.com/problems/minimum-subsequence-in-non-increasing-order/



/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

int comp(void* a, void* b)
{   
    return *(int*)b - *(int*)a;
    
}

int* minSubsequence(int* nums, int numsSize, int* returnSize)
{
    int* ret = (int*)malloc(sizeof(int)*numsSize);
    memcpy(ret, nums, sizeof(int)*numsSize);
    qsort(ret, numsSize, sizeof(int), comp);
    int sum = 0;
    int part = 0;
    (*returnSize) = 0;

    for(int i = 0; i < numsSize; i++)
    {
        sum += ret[i];
    }
    
    for(int i = 0; i < numsSize; i++)
    {
        part+=ret[i];
        (*returnSize)++;
        //printf("%d: %d %d\n", i, part, sum-part);
        if(part > sum-part)
        {
            break;
        }
    }
    
    //*returnSize = 0;
    return ret;
}
