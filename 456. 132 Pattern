//https://leetcode.com/problems/132-pattern/


int min(int a, int b)
{
    if(a>b)
        return b;
    else
        return a;    
}

bool find132pattern(int* nums, int numsSize)
{
    int val_i = INT_MAX;
    
    for(int j = 0; j < numsSize; j++)
    {
        val_i = min(val_i, nums[j]);
        for(int k = j+1; k < numsSize; k++)
        {
            if(nums[j] > nums[k] && nums[k] > val_i)
            {
                return true;
            }
        }
    }
    
    return false;
}

================================================================================================================


bool find132pattern(int* nums, int numsSize)
{
    int* stack = (int*)malloc(sizeof(int)* numsSize);
    int* min = (int*)malloc(sizeof(int)* numsSize);
    int pos = -1;
    
    for(int i = 0; i < numsSize; i++)
    {
        if(i == 0)
            min[i] = nums[i];
        else
        {
            if(nums[i] > min[i-1])
                min[i] = min[i-1];
            else
                min[i] = nums[i];
        }
    }
    
    for(int i = numsSize-1; i >=0; i-- )
    {
        if(min[i] < nums[i])
        {
            while(pos > -1)
            {
                if(stack[pos] <= min[i])
                    pos--;
                else 
                    break;
            }
                
            while(1)
            {
                if(pos == -1)
                {
                    stack[++pos] = nums[i];
                    break;
                }
                if(stack[pos] < nums[i])
                {
                    return true;
                }
                
                if(stack[pos] >= nums[i])
                {
                    stack[++pos] = nums[i];
                    break;
                }
                
            }
        }
    }
    
    return false;
}
