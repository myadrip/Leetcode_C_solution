//https://leetcode.com/problems/linked-list-cycle-ii/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* detectCycle(struct ListNode *head) 
{
    if(head == NULL || head->next == NULL)
        return NULL;
    
    struct ListNode* slow = head;
    struct ListNode* fast = head;
    
    slow = slow->next;
    fast = fast->next->next;
    
    while(fast && fast->next)
    {
        if(slow == fast)
            break;
        slow = slow->next;
        fast = fast->next->next;
    }
    if(slow != fast)
        return NULL;
    
    slow = head;
    while(1)
    {
        if(slow == fast)
            return slow;
        slow = slow->next;
        fast = fast->next;
        
    }
}
